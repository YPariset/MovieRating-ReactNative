{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yoannpariset/Downloads/Movie_Rating-main/screens/LoginScreen.js\";\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React, { useState, useEffect } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { auth } from \"../../firebase\";\nimport { useNavigation } from '@react-navigation/core';\n\nvar Login = function Login() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mdp = _useState4[0],\n      setMdp = _useState4[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        navigation.replace(\"MovieRating++\");\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  var inscription = function inscription() {\n    auth.createUserWithEmailAndPassword(email, mdp).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log(\"Inscrit en tant que \", user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  var ident = function ident() {\n    auth.signInWithEmailAndPassword(email, mdp).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log(\"Identifi√© en tant que \", user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return React.createElement(KeyboardAvoidingView, {\n    style: styles.container,\n    behaviour: \"padding\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.inputContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"MovieRating++\"), React.createElement(TextInput, {\n    placeholder: \"Email\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    style: styles.input,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), React.createElement(TextInput, {\n    placeholder: \"Mot de passe\",\n    value: mdp,\n    onChangeText: function onChangeText(text) {\n      return setMdp(text);\n    },\n    style: styles.input,\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: ident,\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"S'identifier\")), React.createElement(TouchableOpacity, {\n    onPress: inscription,\n    style: [styles.button, styles.buttonOutline],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.buttonOutlineText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"S'inscrire\"))));\n};\n\nexport default Login;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  title: {\n    justifyContent: 'center',\n    textAlign: 'center',\n    fontSize: 24,\n    marginBottom: 20,\n    fontWeight: 600,\n    color: '#d2691e'\n  },\n  inputContainer: {\n    width: '80%'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 10\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40\n  },\n  button: {\n    backgroundColor: '#d2691e',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center'\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#d2691e',\n    borderWidth: 2\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16\n  },\n  buttonOutlineText: {\n    color: '#d2691e',\n    fontWeight: '700',\n    fontSize: 16\n  }\n});","map":{"version":3,"sources":["/Users/yoannpariset/Downloads/Movie_Rating-main/screens/LoginScreen.js"],"names":["React","useState","useEffect","auth","useNavigation","Login","email","setEmail","mdp","setMdp","navigation","unsubscribe","onAuthStateChanged","user","replace","inscription","createUserWithEmailAndPassword","then","userCredentials","console","log","catch","error","alert","message","ident","signInWithEmailAndPassword","styles","container","inputContainer","title","text","input","buttonContainer","button","buttonText","buttonOutline","buttonOutlineText","StyleSheet","create","flex","justifyContent","alignItems","textAlign","fontSize","marginBottom","fontWeight","color","width","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","padding","borderColor","borderWidth"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View } from 'react-native'\nimport React, {useState, useEffect} from 'react'\nimport { KeyboardAvoidingView, TextInput, TouchableOpacity } from 'react-native-web'\nimport { auth } from '../../firebase'\nimport { useNavigation } from '@react-navigation/core'\n\nconst Login = () => {\n    const [email, setEmail] = useState('')\n    const [mdp, setMdp] = useState('')\n\n    const navigation = useNavigation()\n\n    useEffect(() => {\n        const unsubscribe = auth.onAuthStateChanged(user => {\n            if(user) {\n                navigation.replace(\"MovieRating++\")\n            }\n        })\n        return unsubscribe\n    }, [])\n\n    const inscription =() => {\n        auth\n        .createUserWithEmailAndPassword(email, mdp)\n        .then(userCredentials =>{\n            const user = userCredentials.user;\n            console.log(\"Inscrit en tant que \",user.email);\n        })\n        .catch(error => alert(error.message))\n    }\n\n    const ident =() =>{\n        auth\n        .signInWithEmailAndPassword(email,mdp)\n        .then(userCredentials =>{\n            const user = userCredentials.user;\n            console.log(\"Identifi√© en tant que \", user.email);\n        })\n        .catch(error => alert(error.message))\n    }\n\n    \n\n  return (\n// J'utilise KeyboardAvoidingView pour √©viter de cacher/couvrir les input elements quand on a le clavier de mobile\n    <KeyboardAvoidingView\n    style={styles.container}\n    behaviour=\"padding\"\n    \n    >\n      <View style={styles.inputContainer}>\n          <Text style={styles.title}>MovieRating++</Text>\n        <TextInput \n        placeholder=\"Email\"\n        value={email}\n        onChangeText={text => setEmail(text)}\n        style={styles.input}\n        ></TextInput>\n         <TextInput \n        placeholder=\"Mot de passe\"\n        value={mdp}\n       onChangeText={text => setMdp(text)}\n        style={styles.input}\n        secureTextEntry\n        ></TextInput>\n      </View>\n\n      <View style={styles.buttonContainer}>\n        <TouchableOpacity\n          onPress={ident}\n          style={styles.button}\n        >\n          <Text style={styles.buttonText}>S'identifier</Text>\n        </TouchableOpacity>\n        <TouchableOpacity\n          onPress={inscription}\n          style={[styles.button, styles.buttonOutline]}\n        >\n          <Text style={styles.buttonOutlineText}>S'inscrire</Text>\n        </TouchableOpacity>\n      </View>\n    </KeyboardAvoidingView>\n  )\n}\n\nexport default Login\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {\n    justifyContent: 'center',\n    textAlign: 'center',\n    fontSize:24,\n    marginBottom:20,\n    fontWeight:600,\n    color:'#d2691e',\n  },\n  inputContainer: {\n    width: '80%'\n  },\n  input: {\n    backgroundColor: 'white',\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 10,\n  },\n  buttonContainer: {\n    width: '60%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 40,\n  },\n  button: {\n    backgroundColor: '#d2691e',\n    width: '100%',\n    padding: 15,\n    borderRadius: 10,\n    alignItems: 'center',\n  },\n  buttonOutline: {\n    backgroundColor: 'white',\n    marginTop: 5,\n    borderColor: '#d2691e',\n    borderWidth: 2,\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 16,\n  },\n  buttonOutlineText: {\n    color: '#d2691e',\n    fontWeight: '700',\n    fontSize: 16,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}