{"ast":null,"code":"var _jsxFileName = \"/Users/yoannpariset/Downloads/Movie_Rating-main/node_modules/react-native-nav/components/NavButton.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport styles from \"../styles\";\n\nfunction NavButton(_ref) {\n  var _this = this;\n\n  var style = _ref.style,\n      onPress = _ref.onPress,\n      children = _ref.children,\n      disabled = _ref.disabled,\n      disabledStyle = _ref.disabledStyle,\n      accessibilityLabel = _ref.accessibilityLabel;\n  var navButtonStyles = [];\n\n  if (Platform.OS === \"ios\") {\n    navButtonStyles = [styles.navBarButtonIOS];\n  } else if (Platform.OS === \"android\") {\n    navButtonStyles = [styles.navBarButtonAndroid];\n  }\n\n  if (disabled) {\n    navButtonStyles.push(disabledStyle);\n  } else {\n    navButtonStyles.push(style);\n  }\n\n  var getTouchable = function getTouchable() {\n    if (disabled) {\n      return React.createElement(TouchableOpacity, {\n        accessibilityLabel: accessibilityLabel,\n        accessibilityTraits: [\"button\", \"disabled\"],\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: navButtonStyles,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }\n      }, children));\n    }\n\n    return React.createElement(TouchableOpacity, {\n      accessibilityLabel: accessibilityLabel,\n      onPress: onPress,\n      accessibilityTraits: \"button\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: navButtonStyles,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, children));\n  };\n\n  return getTouchable();\n}\n\nNavButton.propTypes = {\n  children: PropTypes.node,\n  onPress: PropTypes.func,\n  style: ViewPropTypes.style,\n  disabled: PropTypes.bool,\n  disabledStyle: ViewPropTypes.style\n};\nNavButton.defaultProps = {\n  style: {},\n  disabledStyle: {},\n  disabled: false\n};\nexport { NavButton };","map":{"version":3,"sources":["/Users/yoannpariset/Downloads/Movie_Rating-main/node_modules/react-native-nav/components/NavButton.js"],"names":["React","PropTypes","ViewPropTypes","styles","NavButton","style","onPress","children","disabled","disabledStyle","accessibilityLabel","navButtonStyles","Platform","OS","navBarButtonIOS","navBarButtonAndroid","push","getTouchable","propTypes","node","func","bool","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;;SAC2CC,a;AAC3C,OAAOC,MAAP;;AAEA,SAASC,SAAT,OAOG;AAAA;;AAAA,MANDC,KAMC,QANDA,KAMC;AAAA,MALDC,OAKC,QALDA,OAKC;AAAA,MAJDC,QAIC,QAJDA,QAIC;AAAA,MAHDC,QAGC,QAHDA,QAGC;AAAA,MAFDC,aAEC,QAFDA,aAEC;AAAA,MADDC,kBACC,QADDA,kBACC;AACD,MAAIC,eAAe,GAAG,EAAtB;;AACA,MAAIC,QAAQ,CAACC,EAAT,KAAgB,KAApB,EAA2B;AACzBF,IAAAA,eAAe,GAAG,CAACR,MAAM,CAACW,eAAR,CAAlB;AACD,GAFD,MAEO,IAAIF,QAAQ,CAACC,EAAT,KAAgB,SAApB,EAA+B;AACpCF,IAAAA,eAAe,GAAG,CAACR,MAAM,CAACY,mBAAR,CAAlB;AACD;;AACD,MAAIP,QAAJ,EAAc;AACZG,IAAAA,eAAe,CAACK,IAAhB,CAAqBP,aAArB;AACD,GAFD,MAEO;AACLE,IAAAA,eAAe,CAACK,IAAhB,CAAqBX,KAArB;AACD;;AAED,MAAMY,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAIT,QAAJ,EAAc;AACZ,aACE,oBAAC,gBAAD;AACE,QAAA,kBAAkB,EAAEE,kBADtB;AAEE,QAAA,mBAAmB,EAAE,CAAC,QAAD,EAAW,UAAX,CAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,QADH,CAHF,CADF;AASD;;AACD,WACE,oBAAC,gBAAD;AACE,MAAA,kBAAkB,EAAEG,kBADtB;AAEE,MAAA,OAAO,EAAEJ,OAFX;AAGE,MAAA,mBAAmB,EAAC,QAHtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEK,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGJ,QADH,CAJF,CADF;AAUD,GAtBD;;AAwBA,SAAOU,YAAY,EAAnB;AACD;;AAEDb,SAAS,CAACc,SAAV,GAAsB;AACpBX,EAAAA,QAAQ,EAAEN,SAAS,CAACkB,IADA;AAEpBb,EAAAA,OAAO,EAAEL,SAAS,CAACmB,IAFC;AAGpBf,EAAAA,KAAK,EAAEH,aAAa,CAACG,KAHD;AAIpBG,EAAAA,QAAQ,EAAEP,SAAS,CAACoB,IAJA;AAKpBZ,EAAAA,aAAa,EAAEP,aAAa,CAACG;AALT,CAAtB;AAQAD,SAAS,CAACkB,YAAV,GAAyB;AACvBjB,EAAAA,KAAK,EAAE,EADgB;AAEvBI,EAAAA,aAAa,EAAE,EAFQ;AAGvBD,EAAAA,QAAQ,EAAE;AAHa,CAAzB;AAMA,SAASJ,SAAT","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Platform, TouchableOpacity, View, ViewPropTypes } from \"react-native\"\nimport styles from \"../styles\"\n\nfunction NavButton({\n  style,\n  onPress,\n  children,\n  disabled,\n  disabledStyle,\n  accessibilityLabel,\n}) {\n  let navButtonStyles = []\n  if (Platform.OS === \"ios\") {\n    navButtonStyles = [styles.navBarButtonIOS]\n  } else if (Platform.OS === \"android\") {\n    navButtonStyles = [styles.navBarButtonAndroid]\n  }\n  if (disabled) {\n    navButtonStyles.push(disabledStyle)\n  } else {\n    navButtonStyles.push(style)\n  }\n\n  const getTouchable = () => {\n    if (disabled) {\n      return (\n        <TouchableOpacity\n          accessibilityLabel={accessibilityLabel}\n          accessibilityTraits={[\"button\", \"disabled\"]}>\n          <View style={navButtonStyles}>\n            {children}\n          </View>\n        </TouchableOpacity>\n      )\n    }\n    return (\n      <TouchableOpacity\n        accessibilityLabel={accessibilityLabel}\n        onPress={onPress}\n        accessibilityTraits=\"button\">\n        <View style={navButtonStyles}>\n          {children}\n        </View>\n      </TouchableOpacity>\n    )\n  }\n\n  return getTouchable()\n}\n\nNavButton.propTypes = {\n  children: PropTypes.node,\n  onPress: PropTypes.func,\n  style: ViewPropTypes.style,\n  disabled: PropTypes.bool,\n  disabledStyle: ViewPropTypes.style,\n}\n\nNavButton.defaultProps = {\n  style: {},\n  disabledStyle: {},\n  disabled: false,\n}\n\nexport { NavButton }\n"]},"metadata":{},"sourceType":"module"}