{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/yoannpariset/Downloads/Movie_Rating-main/screens/LoginScreen.js\";\n\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport { auth } from \"../firebase\";\nimport { theme } from \"../core/theme\";\nimport { useNavigation } from '@react-navigation/core';\n\nvar Login = function Login() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      mdp = _useState4[0],\n      setMdp = _useState4[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        navigation.replace(\"MovieRating++\");\n      }\n    });\n    return unsubscribe;\n  }, []);\n\n  var inscription = function inscription() {\n    auth.createUserWithEmailAndPassword(email, mdp).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log(\"Inscrit en tant que \", user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  var ident = function ident() {\n    auth.signInWithEmailAndPassword(email, mdp).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log(\"Identifi√© en tant que \", user.email);\n    }).catch(function (error) {\n      return alert(error.message);\n    });\n  };\n\n  return React.createElement(Background, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(Logo, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Welcome back.\"), React.createElement(TextInput, {\n    label: \"Email\",\n    returnKeyType: \"next\",\n    value: email,\n    onChangeText: function onChangeText(text) {\n      return setEmail(text);\n    },\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    label: \"Password\",\n    returnKeyType: \"done\",\n    value: mdp,\n    onChangeText: function onChangeText(text) {\n      return setMdp(text);\n    },\n    secureTextEntry: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.forgotPassword,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.navigate('ResetPasswordScreen');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.forgot,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Forgot your password?\"))), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: ident,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, \"Login\"), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: inscription,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Register\"), React.createElement(View, {\n    style: styles.row,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Don\\u2019t have an account? \"), React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return navigation.replace('RegisterScreen');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.link,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Sign up\"))));\n};\n\nexport default Login;\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"sources":["/Users/yoannpariset/Downloads/Movie_Rating-main/screens/LoginScreen.js"],"names":["React","useState","Text","Background","Logo","Header","Button","TextInput","auth","theme","useNavigation","Login","email","setEmail","mdp","setMdp","navigation","useEffect","unsubscribe","onAuthStateChanged","user","replace","inscription","createUserWithEmailAndPassword","then","userCredentials","console","log","catch","error","alert","message","ident","signInWithEmailAndPassword","text","styles","forgotPassword","navigate","forgot","row","link","StyleSheet","create","width","alignItems","marginBottom","flexDirection","marginTop","fontSize","color","colors","secondary","fontWeight","primary"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { TouchableOpacity, StyleSheet, View } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport Background from '../components/Background'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\nimport TextInput from '../components/TextInput'\nimport { auth } from '../firebase'\nimport { theme } from '../core/theme'\nimport { useNavigation } from '@react-navigation/core'\n\nconst Login = () => {\n  const [email, setEmail] = useState('')\n  const [mdp, setMdp] = useState('')\n\n  const navigation = useNavigation()\n\n  useEffect(() => {\n      const unsubscribe = auth.onAuthStateChanged(user => {\n          if(user) {\n              navigation.replace(\"MovieRating++\")\n          }\n      })\n      return unsubscribe\n  }, [])\n\n  const inscription =() => {\n      auth\n      .createUserWithEmailAndPassword(email, mdp)\n      .then(userCredentials =>{\n          const user = userCredentials.user;\n          console.log(\"Inscrit en tant que \",user.email);\n      })\n      .catch(error => alert(error.message))\n  }\n\n  const ident =() =>{\n      auth\n      .signInWithEmailAndPassword(email,mdp)\n      .then(userCredentials =>{\n          const user = userCredentials.user;\n          console.log(\"Identifi√© en tant que \", user.email);\n      })\n      .catch(error => alert(error.message))\n  }\n\n  return (\n    <Background>\n      <Logo />\n      <Header>Welcome back.</Header>\n      <TextInput\n        label=\"Email\"\n        returnKeyType=\"next\"\n        value={email}\n        onChangeText={text => setEmail(text)}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n      />\n      <TextInput\n        label=\"Password\"\n        returnKeyType=\"done\"\n        value={mdp}\n        onChangeText={text => setMdp(text)}\n        secureTextEntry\n      />\n      <View style={styles.forgotPassword}>\n        <TouchableOpacity\n          onPress={() => navigation.navigate('ResetPasswordScreen')}\n        >\n          <Text style={styles.forgot}>Forgot your password?</Text>\n        </TouchableOpacity>\n      </View>\n      <Button mode=\"contained\" onPress={ident}>\n        Login\n      </Button>\n      <Button mode=\"contained\" onPress={inscription}>\n        Register\n      </Button>\n      <View style={styles.row}>\n        <Text>Don‚Äôt have an account? </Text>\n        <TouchableOpacity onPress={() => navigation.replace('RegisterScreen')}>\n          <Text style={styles.link}>Sign up</Text>\n        </TouchableOpacity>\n      </View>\n    </Background>\n  )\n}\n\n  export default Login\n\n\n  const styles = StyleSheet.create({\n    forgotPassword: {\n      width: '100%',\n      alignItems: 'flex-end',\n      marginBottom: 24,\n    },\n    row: {\n      flexDirection: 'row',\n      marginTop: 4,\n    },\n    forgot: {\n      fontSize: 13,\n      color: theme.colors.secondary,\n    },\n    link: {\n      fontWeight: 'bold',\n      color: theme.colors.primary,\n    },\n  })\n\n"]},"metadata":{},"sourceType":"module"}