{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/yoannpariset/Downloads/Movie_Rating-main/screens/ResetPasswordScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport Background from \"../components/Background\";\nimport BackButton from \"../components/BackButton\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport TextInput from \"../components/TextInput\";\nimport Button from \"../components/Button\";\nimport { emailValidator } from \"../helpers/emailValidator\";\nimport { sendEmailWithPassword } from \"../api/auth-api\";\nexport default function ResetPasswordScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState({\n    value: '',\n    error: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var sendResetPasswordEmail = function sendResetPasswordEmail() {\n    var emailError, response;\n    return _regeneratorRuntime.async(function sendResetPasswordEmail$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            emailError = emailValidator(email.value);\n\n            if (!emailError) {\n              _context.next = 4;\n              break;\n            }\n\n            setEmail(_objectSpread(_objectSpread({}, email), {}, {\n              error: emailError\n            }));\n            return _context.abrupt(\"return\");\n\n          case 4:\n            setLoading(true);\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(sendEmailWithPassword(email.value));\n\n          case 7:\n            response = _context.sent;\n            setLoading(false);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(Background, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, React.createElement(Logo, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Restore Password\"), React.createElement(TextInput, {\n    label: \"E-mail address\",\n    returnKeyType: \"done\",\n    value: email.value,\n    onChangeText: function onChangeText(text) {\n      return setEmail({\n        value: text,\n        error: ''\n      });\n    },\n    error: !!email.error,\n    errorText: email.error,\n    autoCapitalize: \"none\",\n    autoCompleteType: \"email\",\n    textContentType: \"emailAddress\",\n    keyboardType: \"email-address\",\n    description: \"You will receive email with password reset link.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }), React.createElement(Button, {\n    mode: \"contained\",\n    onPress: sendResetPasswordEmail,\n    style: {\n      marginTop: 16\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Send Instructions\"));\n}","map":{"version":3,"sources":["/Users/yoannpariset/Downloads/Movie_Rating-main/screens/ResetPasswordScreen.js"],"names":["React","useState","Background","BackButton","Logo","Header","TextInput","Button","emailValidator","sendEmailWithPassword","ResetPasswordScreen","navigation","value","error","email","setEmail","loading","setLoading","sendResetPasswordEmail","emailError","response","text","marginTop"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,IAAP;AACA,OAAOC,MAAP;AACA,OAAOC,SAAP;AACA,OAAOC,MAAP;AACA,SAASC,cAAT;AACA,SAASC,qBAAT;AAEA,eAAe,SAASC,mBAAT,OAA6C;AAAA,MAAdC,UAAc,QAAdA,UAAc;;AAC1D,kBAA0BV,QAAQ,CAAC;AAAEW,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,KAAK,EAAE;AAApB,GAAD,CAAlC;AAAA;AAAA,MAAOC,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAA8Bd,QAAQ,CAAC,KAAD,CAAtC;AAAA;AAAA,MAAOe,OAAP;AAAA,MAAgBC,UAAhB;;AAEA,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA;AAAA;AAAA;AAAA;AAAA;AACvBC,YAAAA,UADuB,GACVX,cAAc,CAACM,KAAK,CAACF,KAAP,CADJ;;AAAA,iBAEzBO,UAFyB;AAAA;AAAA;AAAA;;AAG3BJ,YAAAA,QAAQ,iCAAMD,KAAN;AAAaD,cAAAA,KAAK,EAAEM;AAApB,eAAR;AAH2B;;AAAA;AAM7BF,YAAAA,UAAU,CAAC,IAAD,CAAV;AAN6B;AAAA,6CAONR,qBAAqB,CAACK,KAAK,CAACF,KAAP,CAPf;;AAAA;AAOvBQ,YAAAA,QAPuB;AAS7BH,YAAAA,UAAU,CAAC,KAAD,CAAV;;AAT6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA/B;;AAYA,SACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,EAGE,oBAAC,SAAD;AACE,IAAA,KAAK,EAAC,gBADR;AAEE,IAAA,aAAa,EAAC,MAFhB;AAGE,IAAA,KAAK,EAAEH,KAAK,CAACF,KAHf;AAIE,IAAA,YAAY,EAAE,sBAACS,IAAD;AAAA,aAAUN,QAAQ,CAAC;AAAEH,QAAAA,KAAK,EAAES,IAAT;AAAeR,QAAAA,KAAK,EAAE;AAAtB,OAAD,CAAlB;AAAA,KAJhB;AAKE,IAAA,KAAK,EAAE,CAAC,CAACC,KAAK,CAACD,KALjB;AAME,IAAA,SAAS,EAAEC,KAAK,CAACD,KANnB;AAOE,IAAA,cAAc,EAAC,MAPjB;AAQE,IAAA,gBAAgB,EAAC,OARnB;AASE,IAAA,eAAe,EAAC,cATlB;AAUE,IAAA,YAAY,EAAC,eAVf;AAWE,IAAA,WAAW,EAAC,kDAXd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAgBE,oBAAC,MAAD;AACE,IAAA,IAAI,EAAC,WADP;AAEE,IAAA,OAAO,EAAEK,sBAFX;AAGE,IAAA,KAAK,EAAE;AAAEI,MAAAA,SAAS,EAAE;AAAb,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAhBF,CADF;AA0BD","sourcesContent":["import React, { useState } from 'react'\nimport Background from '../components/Background'\nimport BackButton from '../components/BackButton'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport TextInput from '../components/TextInput'\nimport Button from '../components/Button'\nimport { emailValidator } from '../helpers/emailValidator'\nimport { sendEmailWithPassword } from '../api/auth-api'\n\nexport default function ResetPasswordScreen({ navigation }) {\n  const [email, setEmail] = useState({ value: '', error: '' })\n  const [loading, setLoading] = useState(false)\n\n  const sendResetPasswordEmail = async () => {\n    const emailError = emailValidator(email.value)\n    if (emailError) {\n      setEmail({ ...email, error: emailError })\n      return\n    }\n    setLoading(true)\n    const response = await sendEmailWithPassword(email.value)\n    \n    setLoading(false)\n  }\n\n  return (\n    <Background>\n      <Logo />\n      <Header>Restore Password</Header>\n      <TextInput\n        label=\"E-mail address\"\n        returnKeyType=\"done\"\n        value={email.value}\n        onChangeText={(text) => setEmail({ value: text, error: '' })}\n        error={!!email.error}\n        errorText={email.error}\n        autoCapitalize=\"none\"\n        autoCompleteType=\"email\"\n        textContentType=\"emailAddress\"\n        keyboardType=\"email-address\"\n        description=\"You will receive email with password reset link.\"\n      />\n      <Button\n        mode=\"contained\"\n        onPress={sendResetPasswordEmail}\n        style={{ marginTop: 16 }}\n      >\n        Send Instructions\n      </Button>\n    </Background>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}