{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/yoannpariset/Downloads/Movie_Rating-main/screens/LoginScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Text } from 'react-native-paper';\nimport Background from \"../components/Background\";\nimport Logo from \"../components/Logo\";\nimport Header from \"../components/Header\";\nimport Button from \"../components/Button\";\nimport TextInput from \"../components/TextInput\";\nimport BackButton from \"../components/BackButton\";\nimport { theme } from \"../core/theme\";\nimport * as firebase from \"../core/config\";\n\nvar LoginScreen = function (_React$Component) {\n  _inherits(LoginScreen, _React$Component);\n\n  var _super = _createSuper(LoginScreen);\n\n  function LoginScreen() {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      email: '',\n      password: '',\n      errorMessage: null\n    };\n\n    _this.handleLogin = function () {\n      var _this$state = _this.state,\n          email = _this$state.email,\n          password = _this$state.password;\n      firebase.auth().signInWithEmailAndPassword(email, password).catch(function (error) {\n        return _this.setState({\n          errorMessage: 'Adresse mail ou  mot de passe  invalide'\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Background, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }\n      }, React.createElement(BackButton, {\n        goBack: navigation.goBack,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }\n      }), React.createElement(Logo, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 9\n        }\n      }), React.createElement(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      }, \"Welcome back.\"), React.createElement(TextInput, {\n        label: \"Email\",\n        returnKeyType: \"next\",\n        value: email.value,\n        onChangeText: function onChangeText(text) {\n          return setEmail({\n            value: text,\n            error: ''\n          });\n        },\n        error: !!email.error,\n        errorText: email.error,\n        autoCapitalize: \"none\",\n        autoCompleteType: \"email\",\n        textContentType: \"emailAddress\",\n        keyboardType: \"email-address\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }), React.createElement(TextInput, {\n        label: \"Password\",\n        returnKeyType: \"done\",\n        value: password.value,\n        onChangeText: function onChangeText(text) {\n          return setPassword({\n            value: text,\n            error: ''\n          });\n        },\n        error: !!password.error,\n        errorText: password.error,\n        secureTextEntry: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.forgotPassword,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.navigate('ResetPasswordScreen');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.forgot,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, \"Forgot your password?\"))), React.createElement(Button, {\n        mode: \"contained\",\n        onPress: onLoginPressed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, \"Login\"), React.createElement(View, {\n        style: styles.row,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, \"Don\\u2019t have an account? \"), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return navigation.replace('RegisterScreen');\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: styles.link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }\n      }, \"Sign up\"))));\n    }\n  }]);\n\n  return LoginScreen;\n}(React.Component);\n\nLoginScreen.navigationOptions = {\n  header: null\n};\nexport { LoginScreen as default };\nvar styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary\n  }\n});","map":{"version":3,"sources":["/Users/yoannpariset/Downloads/Movie_Rating-main/screens/LoginScreen.js"],"names":["React","useState","Text","Background","Logo","Header","Button","TextInput","BackButton","theme","firebase","LoginScreen","state","email","password","errorMessage","handleLogin","auth","signInWithEmailAndPassword","catch","error","setState","navigation","goBack","value","text","setEmail","setPassword","styles","forgotPassword","navigate","forgot","onLoginPressed","row","replace","link","Component","navigationOptions","header","StyleSheet","create","width","alignItems","marginBottom","flexDirection","marginTop","fontSize","color","colors","secondary","fontWeight","primary"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { TouchableOpacity, StyleSheet, View } from 'react-native'\nimport { Text } from 'react-native-paper'\nimport Background from '../components/Background'\nimport Logo from '../components/Logo'\nimport Header from '../components/Header'\nimport Button from '../components/Button'\nimport TextInput from '../components/TextInput'\nimport BackButton from '../components/BackButton'\nimport { theme } from '../core/theme'\nimport * as firebase from '../core/config'\n\n\nexport default class LoginScreen extends React.Component {\n  static navigationOptions = {\n    header: null,\n  }\n\n  state = {\n    email: '',\n    password: '',\n    errorMessage: null,\n  }\n\n  handleLogin = () => {\n    const { email, password } = this.state\n\n    firebase\n      .auth()\n      .signInWithEmailAndPassword(email, password)\n      .catch((error) =>\n        this.setState({\n          errorMessage: 'Adresse mail ou  mot de passe  invalide',\n        })\n      )\n  }\n  render() {\n    return (\n      <Background>\n        <BackButton goBack={navigation.goBack} />\n        <Logo />\n        <Header>Welcome back.</Header>\n        <TextInput\n          label=\"Email\"\n          returnKeyType=\"next\"\n          value={email.value}\n          onChangeText={(text) => setEmail({ value: text, error: '' })}\n          error={!!email.error}\n          errorText={email.error}\n          autoCapitalize=\"none\"\n          autoCompleteType=\"email\"\n          textContentType=\"emailAddress\"\n          keyboardType=\"email-address\"\n        />\n        <TextInput\n          label=\"Password\"\n          returnKeyType=\"done\"\n          value={password.value}\n          onChangeText={(text) => setPassword({ value: text, error: '' })}\n          error={!!password.error}\n          errorText={password.error}\n          secureTextEntry\n        />\n        <View style={styles.forgotPassword}>\n          <TouchableOpacity\n            onPress={() => navigation.navigate('ResetPasswordScreen')}\n          >\n            <Text style={styles.forgot}>Forgot your password?</Text>\n          </TouchableOpacity>\n        </View>\n        <Button mode=\"contained\" onPress={onLoginPressed}>\n          Login\n        </Button>\n        <View style={styles.row}>\n          <Text>Don’t have an account? </Text>\n          <TouchableOpacity onPress={() => navigation.replace('RegisterScreen')}>\n            <Text style={styles.link}>Sign up</Text>\n          </TouchableOpacity>\n        </View>\n      </Background>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  forgotPassword: {\n    width: '100%',\n    alignItems: 'flex-end',\n    marginBottom: 24,\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4,\n  },\n  forgot: {\n    fontSize: 13,\n    color: theme.colors.secondary,\n  },\n  link: {\n    fontWeight: 'bold',\n    color: theme.colors.primary,\n  },\n})\n"]},"metadata":{},"sourceType":"module"}