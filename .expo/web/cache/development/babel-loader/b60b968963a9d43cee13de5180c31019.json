{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { FIREBASE_CONFIG } from \"../core/config\";\nimport firebase from \"../core/config\";\nimport 'firebase/firestore';\n\nvar Fire = function () {\n  function Fire() {\n    var _this = this;\n\n    _classCallCheck(this, Fire);\n\n    this.createUser = function _callee(user) {\n      var remoteUri, _db;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              remoteUri = null;\n              _context.prev = 1;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(firebase.auth().createUserWithEmailAndPassword(user.email, user.password));\n\n            case 4:\n              _db = _this.firestore.collection(\"users\").doc(_this.uid);\n\n              _db.set({\n                name: user.name,\n                email: user.email\n              });\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](1);\n              alert(\"Error: \", _context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[1, 8]], Promise);\n    };\n\n    this.signOut = function () {\n      firebase.auth().signOut();\n    };\n\n    firebase.initializeApp(FIREBASE_CONFIG);\n  }\n\n  _createClass(Fire, [{\n    key: \"off\",\n    value: function off() {\n      this.db.off();\n    }\n  }, {\n    key: \"firestore\",\n    get: function get() {\n      return firebase.firestore();\n    }\n  }, {\n    key: \"uid\",\n    get: function get() {\n      return (firebase.auth().currentUser || {}).uid;\n    }\n  }]);\n\n  return Fire;\n}();\n\nFire.shared = new Fire();\nexport default Fire;\nexport var db = firebase.firestore();","map":{"version":3,"sources":["/Users/yoannpariset/Downloads/Movie_Rating-main/core/Fire.js"],"names":["FIREBASE_CONFIG","firebase","Fire","createUser","user","remoteUri","auth","createUserWithEmailAndPassword","email","password","db","firestore","collection","doc","uid","set","name","alert","signOut","initializeApp","off","currentUser","shared"],"mappings":";;;AAAA,SAASA,eAAT;AACA,OAAOC,QAAP;AACA,OAAO,oBAAP;;IAEMC,I;AACF,kBAAc;AAAA;;AAAA;;AAAA,SAIdC,UAJc,GAID,iBAAMC,IAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AACLC,cAAAA,SADK,GACO,IADP;AAAA;AAAA;AAAA,+CAICJ,QAAQ,CAACK,IAAT,GAAgBC,8BAAhB,CAA+CH,IAAI,CAACI,KAApD,EAA2DJ,IAAI,CAACK,QAAhE,CAJD;;AAAA;AAMDC,cAAAA,GANC,GAMI,KAAI,CAACC,SAAL,CAAeC,UAAf,CAA0B,OAA1B,EAAmCC,GAAnC,CAAuC,KAAI,CAACC,GAA5C,CANJ;;AAQLJ,cAAAA,GAAE,CAACK,GAAH,CAAO;AACHC,gBAAAA,IAAI,EAAEZ,IAAI,CAACY,IADR;AAEHR,gBAAAA,KAAK,EAAEJ,IAAI,CAACI;AAFT,eAAP;;AARK;AAAA;;AAAA;AAAA;AAAA;AAaLS,cAAAA,KAAK,CAAC,SAAD,cAAL;;AAbK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJC;;AAAA,SAqBdC,OArBc,GAqBJ,YAAM;AACZjB,MAAAA,QAAQ,CAACK,IAAT,GAAgBY,OAAhB;AACH,KAvBa;;AACVjB,IAAAA,QAAQ,CAACkB,aAAT,CAAuBnB,eAAvB;AACH;;;;WAwBD,eAAM;AACF,WAAKU,EAAL,CAAQU,GAAR;AACH;;;SAED,eAAgB;AACZ,aAAOnB,QAAQ,CAACU,SAAT,EAAP;AACH;;;SAED,eAAU;AACN,aAAO,CAACV,QAAQ,CAACK,IAAT,GAAgBe,WAAhB,IAA+B,EAAhC,EAAoCP,GAA3C;AACH;;;;;;AAGLZ,IAAI,CAACoB,MAAL,GAAc,IAAIpB,IAAJ,EAAd;AACA,eAAeA,IAAf;AACA,OAAO,IAAMQ,EAAE,GAAGT,QAAQ,CAACU,SAAT,EAAX","sourcesContent":["import { FIREBASE_CONFIG } from '../core/config'\nimport firebase from \"../core/config\";\nimport 'firebase/firestore';\n\nclass Fire {\n    constructor() {\n        firebase.initializeApp(FIREBASE_CONFIG);\n    }\n\n    createUser = async user => {\n        let remoteUri = null;\n\n        try {\n            await firebase.auth().createUserWithEmailAndPassword(user.email, user.password);\n\n            let db = this.firestore.collection(\"users\").doc(this.uid);\n\n            db.set({\n                name: user.name,\n                email: user.email,\n            });\n        } catch (error) {\n            alert(\"Error: \", error);\n        }\n    };\n\n    signOut = () => {\n        firebase.auth().signOut();\n    };\n\n\n    off() {\n        this.db.off();\n    }\n\n    get firestore() {\n        return firebase.firestore();\n    }\n\n    get uid() {\n        return (firebase.auth().currentUser || {}).uid;\n    }\n}\n\nFire.shared = new Fire();\nexport default Fire;\nexport const db = firebase.firestore();"]},"metadata":{},"sourceType":"module"}